{"ast":null,"code":"var _jsxFileName = \"/Users/omaga/Desktop/Current/SqlNodeReactJson 2/frontend/src/pages/Users.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tableName, setTableName] = useState(\"\");\n  const [columns, setColumns] = useState([]);\n  const [sourceDefinition, setSourceDefinition] = useState({\n    Name: \"\",\n    columns: []\n  });\n  const fetchColumns = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8800/`);\n      console.log(response.data); // log response to console\n      const columns = Array.isArray(response.data) ? response.data.map(column => ({\n        name: column.name,\n        dataType: column.dataType\n      })) : [];\n      setColumns(columns);\n      setSourceDefinition({\n        ...sourceDefinition,\n        columns: columns\n      });\n      console.log(columns);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleDownload = async () => {\n    try {\n      const response = await axios.post(`http://localhost:8800/`, {\n        tableName,\n        sourceDefinition\n      });\n      const url = window.URL.createObjectURL(new Blob([JSON.stringify(response.data)]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"output.json\");\n      document.body.appendChild(link);\n      link.click();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Table Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: tableName,\n      onChange: e => setTableName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchColumns,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [columns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Column Name: \", column.column_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Data Type: \", column.data_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, column.column_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)), columns.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Make changes to source definition as necessary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Column Name\",\n          onChange: e => {\n            setSourceDefinition({\n              ...sourceDefinition,\n              columns: sourceDefinition.columns.map(col => col.column_name === \"ID\" ? {\n                ...col,\n                column_name: e.target.value\n              } : col)\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Data Type\",\n          onChange: e => {\n            setSourceDefinition({\n              ...sourceDefinition,\n              columns: sourceDefinition.columns.map(col => col.column_name === \"ID\" ? {\n                ...col,\n                data_type: e.target.value\n              } : col)\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Data Length\",\n          onChange: e => {\n            setSourceDefinition({\n              ...sourceDefinition,\n              columns: sourceDefinition.columns.map(col => col.column_name === \"ID\" ? {\n                ...col,\n                data_length: e.target.value\n              } : col)\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), sourceDefinition.columns.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ak0EdgzjupnzS14hqrCVKCR3TDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","App","tableName","setTableName","columns","setColumns","sourceDefinition","setSourceDefinition","Name","fetchColumns","response","get","console","log","data","Array","isArray","map","column","name","dataType","error","handleDownload","post","url","window","URL","createObjectURL","Blob","JSON","stringify","link","document","createElement","href","setAttribute","body","appendChild","click","e","target","value","column_name","data_type","length","col","data_length"],"sources":["/Users/omaga/Desktop/Current/SqlNodeReactJson 2/frontend/src/pages/Users.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [tableName, setTableName] = useState(\"\");\n  const [columns, setColumns] = useState([]);\n  const [sourceDefinition, setSourceDefinition] = useState({\n    Name: \"\",\n    columns: [],\n  });\n\n  const fetchColumns = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8800/`);\n      console.log(response.data); // log response to console\n      const columns = Array.isArray(response.data)\n        ? response.data.map((column) => ({\n            name: column.name,\n            dataType: column.dataType,\n          }))\n        : [];\n\n      setColumns(columns);\n      setSourceDefinition({\n        ...sourceDefinition,\n        columns: columns,\n      });\n      console.log(columns);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleDownload = async () => {\n    try {\n      const response = await axios.post(`http://localhost:8800/`, {\n        tableName,\n        sourceDefinition,\n      });\n      const url = window.URL.createObjectURL(\n        new Blob([JSON.stringify(response.data)])\n      );\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"output.json\");\n      document.body.appendChild(link);\n      link.click();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Table Name:</h1>\n      <input\n        type=\"text\"\n        value={tableName}\n        onChange={(e) => setTableName(e.target.value)}\n      />\n      <button onClick={fetchColumns}>Next</button>\n      <div>\n        {columns.map((column) => (\n          <div key={column.column_name}>\n            <p>Column Name: {column.column_name}</p>\n            <p>Data Type: {column.data_type}</p>\n          </div>\n        ))}\n        {columns.length > 0 && (\n          <div>\n            <p>Make changes to source definition as necessary:</p>\n            <input\n              type=\"text\"\n              placeholder=\"Column Name\"\n              onChange={(e) => {\n                setSourceDefinition({\n                  ...sourceDefinition,\n                  columns: sourceDefinition.columns.map((col) =>\n                    col.column_name === \"ID\"\n                      ? { ...col, column_name: e.target.value }\n                      : col\n                  ),\n                });\n              }}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Data Type\"\n              onChange={(e) => {\n                setSourceDefinition({\n                  ...sourceDefinition,\n                  columns: sourceDefinition.columns.map((col) =>\n                    col.column_name === \"ID\"\n                      ? { ...col, data_type: e.target.value }\n                      : col\n                  ),\n                });\n              }}\n            />\n            <input\n              type=\"number\"\n              placeholder=\"Data Length\"\n              onChange={(e) => {\n                setSourceDefinition({\n                  ...sourceDefinition,\n                  columns: sourceDefinition.columns.map((col) =>\n                    col.column_name === \"ID\"\n                      ? { ...col, data_length: e.target.value }\n                      : col\n                  ),\n                });\n              }}\n            />\n          </div>\n        )}\n        {sourceDefinition.columns.length > 0 && (\n          <button onClick={handleDownload}>Download</button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC;IACvDS,IAAI,EAAE,EAAE;IACRJ,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMK,YAAY,GAAG,YAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,wBAAuB,CAAC;MAC1DC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAC5B,MAAMV,OAAO,GAAGW,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACI,IAAI,CAAC,GACxCJ,QAAQ,CAACI,IAAI,CAACG,GAAG,CAAEC,MAAM,KAAM;QAC7BC,IAAI,EAAED,MAAM,CAACC,IAAI;QACjBC,QAAQ,EAAEF,MAAM,CAACE;MACnB,CAAC,CAAC,CAAC,GACH,EAAE;MAENf,UAAU,CAACD,OAAO,CAAC;MACnBG,mBAAmB,CAAC;QAClB,GAAGD,gBAAgB;QACnBF,OAAO,EAAEA;MACX,CAAC,CAAC;MACFQ,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;IACtB,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMC,cAAc,GAAG,YAAY;IACjC,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMV,KAAK,CAACuB,IAAI,CAAE,wBAAuB,EAAE;QAC1DrB,SAAS;QACTI;MACF,CAAC,CAAC;MACF,MAAMkB,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CACpC,IAAIC,IAAI,CAAC,CAACC,IAAI,CAACC,SAAS,CAACpB,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAC1C;MACD,MAAMiB,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGV,GAAG;MACfO,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,aAAa,CAAC;MAC5CH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,EAAE;IACd,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACpB;MACE,IAAI,EAAC,MAAM;MACX,KAAK,EAAEnB,SAAU;MACjB,QAAQ,EAAGqC,CAAC,IAAKpC,YAAY,CAACoC,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC9C,eACF;MAAQ,OAAO,EAAEhC,YAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eAC5C;MAAA,WACGL,OAAO,CAACa,GAAG,CAAEC,MAAM,iBAClB;QAAA,wBACE;UAAA,4BAAiBA,MAAM,CAACwB,WAAW;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eACxC;UAAA,0BAAexB,MAAM,CAACyB,SAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA,GAF5BzB,MAAM,CAACwB,WAAW;QAAA;QAAA;QAAA;MAAA,QAI7B,CAAC,EACDtC,OAAO,CAACwC,MAAM,GAAG,CAAC,iBACjB;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsD,eACtD;UACE,IAAI,EAAC,MAAM;UACX,WAAW,EAAC,aAAa;UACzB,QAAQ,EAAGL,CAAC,IAAK;YACfhC,mBAAmB,CAAC;cAClB,GAAGD,gBAAgB;cACnBF,OAAO,EAAEE,gBAAgB,CAACF,OAAO,CAACa,GAAG,CAAE4B,GAAG,IACxCA,GAAG,CAACH,WAAW,KAAK,IAAI,GACpB;gBAAE,GAAGG,GAAG;gBAAEH,WAAW,EAAEH,CAAC,CAACC,MAAM,CAACC;cAAM,CAAC,GACvCI,GAAG;YAEX,CAAC,CAAC;UACJ;QAAE;UAAA;UAAA;UAAA;QAAA,QACF,eACF;UACE,IAAI,EAAC,MAAM;UACX,WAAW,EAAC,WAAW;UACvB,QAAQ,EAAGN,CAAC,IAAK;YACfhC,mBAAmB,CAAC;cAClB,GAAGD,gBAAgB;cACnBF,OAAO,EAAEE,gBAAgB,CAACF,OAAO,CAACa,GAAG,CAAE4B,GAAG,IACxCA,GAAG,CAACH,WAAW,KAAK,IAAI,GACpB;gBAAE,GAAGG,GAAG;gBAAEF,SAAS,EAAEJ,CAAC,CAACC,MAAM,CAACC;cAAM,CAAC,GACrCI,GAAG;YAEX,CAAC,CAAC;UACJ;QAAE;UAAA;UAAA;UAAA;QAAA,QACF,eACF;UACE,IAAI,EAAC,QAAQ;UACb,WAAW,EAAC,aAAa;UACzB,QAAQ,EAAGN,CAAC,IAAK;YACfhC,mBAAmB,CAAC;cAClB,GAAGD,gBAAgB;cACnBF,OAAO,EAAEE,gBAAgB,CAACF,OAAO,CAACa,GAAG,CAAE4B,GAAG,IACxCA,GAAG,CAACH,WAAW,KAAK,IAAI,GACpB;gBAAE,GAAGG,GAAG;gBAAEC,WAAW,EAAEP,CAAC,CAACC,MAAM,CAACC;cAAM,CAAC,GACvCI,GAAG;YAEX,CAAC,CAAC;UACJ;QAAE;UAAA;UAAA;UAAA;QAAA,QACF;MAAA;QAAA;QAAA;QAAA;MAAA,QAEL,EACAvC,gBAAgB,CAACF,OAAO,CAACwC,MAAM,GAAG,CAAC,iBAClC;QAAQ,OAAO,EAAEtB,cAAe;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC;IAAA;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAtHIrB,GAAG;AAAA,KAAHA,GAAG;AAwHT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}