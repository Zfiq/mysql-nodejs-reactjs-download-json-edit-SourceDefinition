{"ast":null,"code":"var _jsxFileName = \"/Users/omaga/Desktop/Current/SqlNodeReactJson 2/frontend/src/pages/Users.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [tableName, setTableName] = useState(\"\");\n  const [columns, setColumns] = useState([]);\n  const [sourceDefinition, setSourceDefinition] = useState({\n    Name: \"\",\n    columns: []\n  });\n  const [tableStatus, setTableStatus] = useState();\n  const fetchColumns = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8800/`);\n      const columns = response.data.map(col => ({\n        column_name: col.column_name,\n        data_type: col.data_type\n      }));\n      setTableStatus(\"\");\n      setColumns(columns);\n      setSourceDefinition({\n        ...sourceDefinition,\n        columns: columns\n      });\n    } catch (error) {\n      console.log(error);\n      setTableStatus(\"Table not found\");\n    }\n  };\n  const handleColumnNameChange = (event, i) => {\n    const newColumns = [...sourceDefinition.columns];\n    newColumns[i].column_name = event.target.value;\n    setSourceDefinition({\n      ...sourceDefinition,\n      columns: newColumns\n    });\n  };\n  const handleDataTypeChange = (event, i) => {\n    const newColumns = [...sourceDefinition.columns];\n    newColumns[i].data_type = event.target.value;\n    setSourceDefinition({\n      ...sourceDefinition,\n      columns: newColumns\n    });\n  };\n  const handleDownload = () => {\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(sourceDefinition));\n    const downloadAnchorNode = document.createElement(\"a\");\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\n    downloadAnchorNode.setAttribute(\"download\", `${tableName}.json`);\n    document.body.appendChild(downloadAnchorNode);\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Table Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: tableStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        setTableName(event.target[0].value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Ready to fetch \", tableName, \" table.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Load Table:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchColumns,\n      children: \"Fetch Columns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Columns:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: columns.map((col, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: col.column_name,\n          onChange: event => handleColumnNameChange(event, i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), \"(\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: col.data_type,\n          onChange: event => handleDataTypeChange(event, i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), \")\"]\n      }, col.column_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"gD5xkbXStCqvUwgpGbzXfQ3zajA=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","axios","Users","tableName","setTableName","columns","setColumns","sourceDefinition","setSourceDefinition","Name","tableStatus","setTableStatus","fetchColumns","response","get","data","map","col","column_name","data_type","error","console","log","handleColumnNameChange","event","i","newColumns","target","value","handleDataTypeChange","handleDownload","dataStr","encodeURIComponent","JSON","stringify","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","preventDefault"],"sources":["/Users/omaga/Desktop/Current/SqlNodeReactJson 2/frontend/src/pages/Users.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Users = () => {\n  const [tableName, setTableName] = useState(\"\");\n  const [columns, setColumns] = useState([]);\n  const [sourceDefinition, setSourceDefinition] = useState({\n    Name: \"\",\n    columns: [],\n  });\n  const [tableStatus, setTableStatus] = useState();\n\n  const fetchColumns = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8800/`);\n      const columns = response.data.map((col) => ({\n        column_name: col.column_name,\n        data_type: col.data_type,\n      }));\n      setTableStatus(\"\");\n      setColumns(columns);\n      setSourceDefinition({\n        ...sourceDefinition,\n        columns: columns,\n      });\n    } catch (error) {\n      console.log(error);\n      setTableStatus(\"Table not found\");\n    }\n  };\n\n  const handleColumnNameChange = (event, i) => {\n    const newColumns = [...sourceDefinition.columns];\n    newColumns[i].column_name = event.target.value;\n    setSourceDefinition({\n      ...sourceDefinition,\n      columns: newColumns,\n    });\n  };\n\n  const handleDataTypeChange = (event, i) => {\n    const newColumns = [...sourceDefinition.columns];\n    newColumns[i].data_type = event.target.value;\n    setSourceDefinition({\n      ...sourceDefinition,\n      columns: newColumns,\n    });\n  };\n\n  const handleDownload = () => {\n    const dataStr =\n      \"data:text/json;charset=utf-8,\" +\n      encodeURIComponent(JSON.stringify(sourceDefinition));\n    const downloadAnchorNode = document.createElement(\"a\");\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\n    downloadAnchorNode.setAttribute(\"download\", `${tableName}.json`);\n    document.body.appendChild(downloadAnchorNode);\n    downloadAnchorNode.click();\n    downloadAnchorNode.remove();\n  };\n\n  return (\n    <div>\n      <h1>Table Name:</h1>\n      <p>{tableStatus}</p>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          setTableName(event.target[0].value);\n        }}\n      >\n        <input type=\"text\" />\n        <button type=\"submit\">Submit</button>\n      </form>\n      <p>Ready to fetch {tableName} table.</p>\n      <h1>Load Table:</h1>\n      <button onClick={fetchColumns}>Fetch Columns</button>\n      <br />\n      <h1>Columns:</h1>\n      <ul>\n        {columns.map((col, i) => (\n          <li key={col.column_name}>\n            <input\n              type=\"text\"\n              value={col.column_name}\n              onChange={(event) => handleColumnNameChange(event, i)}\n            />\n            (\n            <input\n              type=\"text\"\n              value={col.data_type}\n              onChange={(event) => handleDataTypeChange(event, i)}\n            />\n            )\n          </li>\n        ))}\n      </ul>\n      <>\n        <button onClick={handleDownload}>Download JSON</button>\n      </>\n    </div>\n  );\n};\n\nexport default Users;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}