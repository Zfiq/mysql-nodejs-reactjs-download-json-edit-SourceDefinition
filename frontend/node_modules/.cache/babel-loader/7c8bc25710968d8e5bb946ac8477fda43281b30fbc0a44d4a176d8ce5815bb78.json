{"ast":null,"code":"var _jsxFileName = \"/Users/omaga/Desktop/Current/SqlNodeReactJson 2/frontend/src/pages/Users.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Columns from \"./Columns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [tableName, setTableName] = useState(\"\");\n  const [columns, setColumns] = useState([]);\n  const [sourceDefinition, setSourceDefinition] = useState({\n    Name: \"\",\n    columns: []\n  });\n  const [tableStatus, setTableStatus] = useState();\n  const [displayedColumns, setDisplayedColumns] = useState([]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const value = inputValue;\n    // Send inputValue to server using fetch or axios\n    const response = await axios.post(\"http://localhost:8800/\", {\n      value\n    });\n    console.log(response.data);\n    setTableName(value);\n  };\n  const handleChange = event => {\n    setInputValue(event.target.value);\n  };\n  const fetchColumns = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8800/`);\n      const columns = response.data.map(col => ({\n        column_name: col.column_name,\n        data_type: col.data_type\n      }));\n      setTableStatus(\"\");\n      setColumns(columns);\n      setSourceDefinition({\n        ...sourceDefinition,\n        columns: columns\n      });\n    } catch (error) {\n      console.log(error);\n      setTableStatus(\"Table not found\");\n    }\n  };\n  const handleColumnNameChange = (event, i) => {\n    const newColumns = [...sourceDefinition.columns];\n    newColumns[i].column_name = event.target.value;\n    setSourceDefinition({\n      ...sourceDefinition,\n      columns: newColumns\n    });\n  };\n  const handleDataTypeChange = (event, i) => {\n    const newColumns = [...sourceDefinition.columns];\n    newColumns[i].data_type = event.target.value;\n    setSourceDefinition({\n      ...sourceDefinition,\n      columns: newColumns\n    });\n  };\n  const display = () => {\n    setDisplayedColumns(sourceDefinition.columns);\n  };\n  const handleDownload = () => {\n    const jsonData = JSON.stringify(sourceDefinition, null, 2);\n    // Download the file\n    const url = window.URL.createObjectURL(new Blob([jsonData]));\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"output.json\");\n    document.body.appendChild(link);\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Table Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: tableStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Ready to fetch \", tableName, \" table.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Load Table:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchColumns,\n      children: \"Fetch Columns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Columns:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: columns.map((col, i, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: col.column_name,\n          onChange: event => handleColumnNameChange(event, i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: col.data_type,\n          onChange: event => handleDataTypeChange(event, i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: display,\n        children: \"Display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), displayedColumns.map((col, i) => /*#__PURE__*/_jsxDEV(Columns, {\n        column: col\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"co5yJWGGMOpPuu/oCKwhYx2PMuM=\");\n_c = Users;\nexport default Users;\n// SHOW AND HIDE COMPONENT\n// RESET BUTTON\n// SEPARATE WINDOW DIALOG\n// CSS\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","axios","Columns","Users","inputValue","setInputValue","tableName","setTableName","columns","setColumns","sourceDefinition","setSourceDefinition","Name","tableStatus","setTableStatus","displayedColumns","setDisplayedColumns","handleSubmit","event","preventDefault","value","response","post","console","log","data","handleChange","target","fetchColumns","get","map","col","column_name","data_type","error","handleColumnNameChange","i","newColumns","handleDataTypeChange","display","handleDownload","jsonData","JSON","stringify","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","index"],"sources":["/Users/omaga/Desktop/Current/SqlNodeReactJson 2/frontend/src/pages/Users.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Columns from \"./Columns\";\n\nconst Users = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [tableName, setTableName] = useState(\"\");\n  const [columns, setColumns] = useState([]);\n  const [sourceDefinition, setSourceDefinition] = useState({\n    Name: \"\",\n    columns: [],\n  });\n  const [tableStatus, setTableStatus] = useState();\n  const [displayedColumns, setDisplayedColumns] = useState([]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const value = inputValue;\n    // Send inputValue to server using fetch or axios\n    const response = await axios.post(\"http://localhost:8800/\", { value });\n    console.log(response.data);\n    setTableName(value);\n  };\n  const handleChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const fetchColumns = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8800/`);\n      const columns = response.data.map((col) => ({\n        column_name: col.column_name,\n        data_type: col.data_type,\n      }));\n      setTableStatus(\"\");\n      setColumns(columns);\n      setSourceDefinition({\n        ...sourceDefinition,\n        columns: columns,\n      });\n    } catch (error) {\n      console.log(error);\n      setTableStatus(\"Table not found\");\n    }\n  };\n\n  const handleColumnNameChange = (event, i) => {\n    const newColumns = [...sourceDefinition.columns];\n    newColumns[i].column_name = event.target.value;\n    setSourceDefinition({\n      ...sourceDefinition,\n      columns: newColumns,\n    });\n  };\n\n  const handleDataTypeChange = (event, i) => {\n    const newColumns = [...sourceDefinition.columns];\n    newColumns[i].data_type = event.target.value;\n    setSourceDefinition({\n      ...sourceDefinition,\n      columns: newColumns,\n    });\n  };\n\n  const display = () => {\n    setDisplayedColumns(sourceDefinition.columns);\n  };\n\n  const handleDownload = () => {\n    const jsonData = JSON.stringify(sourceDefinition, null, 2);\n    // Download the file\n    const url = window.URL.createObjectURL(new Blob([jsonData]));\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.setAttribute(\"download\", \"output.json\");\n    document.body.appendChild(link);\n    link.click();\n  };\n\n  return (\n    <div>\n      <h1>Table Name:</h1>\n      <p>{tableStatus}</p>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={inputValue} onChange={handleChange} />\n        <button type=\"submit\">Submit</button>\n      </form>\n      <p>Ready to fetch {tableName} table.</p>\n      <h1>Load Table:</h1>\n      <button onClick={fetchColumns}>Fetch Columns</button>\n      <br />\n      <h1>Columns:</h1>\n      <ul>\n        {columns.map((col, i, index) => (\n          <li key={index}>\n            <input\n              type=\"text\"\n              value={col.column_name}\n              onChange={(event) => handleColumnNameChange(event, i)}\n            />\n\n            <input\n              type=\"text\"\n              value={col.data_type}\n              onChange={(event) => handleDataTypeChange(event, i)}\n            />\n          </li>\n        ))}\n      </ul>\n      <>\n        <button onClick={display}>Display</button>\n        {displayedColumns.map((col, i) => (\n          <Columns key={i} column={col} />\n        ))}\n        <button onClick={handleDownload}>Download JSON</button>\n      </>\n    </div>\n  );\n};\n\nexport default Users;\n// SHOW AND HIDE COMPONENT\n// RESET BUTTON\n// SEPARATE WINDOW DIALOG\n// CSS\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}