{"ast":null,"code":"var _jsxFileName = \"/Users/omaga/Desktop/Current/SqlNodeReactJson 2/frontend/src/pages/Columns.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Columns(props) {\n  const {\n    displayedColumns\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), displayedColumns.map((col, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [col.column_name, \" (\", col.data_type, \")\"]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_c = Columns;\nexport default Columns;\nvar _c;\n$RefreshReg$(_c, \"Columns\");","map":{"version":3,"names":["React","useState","axios","Columns","props","displayedColumns","map","col","i","column_name","data_type"],"sources":["/Users/omaga/Desktop/Current/SqlNodeReactJson 2/frontend/src/pages/Columns.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction Columns(props) {\n  const { displayedColumns } = props;\n  return (\n    <>\n      <h1>Preview</h1>\n\n      {displayedColumns.map((col, i) => (\n        <p key={i}>\n          {col.column_name} ({col.data_type})\n        </p>\n      ))}\n    </>\n  );\n}\n\nexport default Columns;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAAA;AAE1B,SAASC,OAAO,CAACC,KAAK,EAAE;EACtB,MAAM;IAAEC;EAAiB,CAAC,GAAGD,KAAK;EAClC,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,EAEfC,gBAAgB,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBAC3B;MAAA,WACGD,GAAG,CAACE,WAAW,QAAIF,GAAG,CAACG,SAAS;IAAA,GAD3BF,CAAC;MAAA;MAAA;MAAA;IAAA,QAGV,CAAC;EAAA,gBACD;AAEP;AAAC,KAbQL,OAAO;AAehB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}