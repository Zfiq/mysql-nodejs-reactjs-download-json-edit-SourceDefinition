{"ast":null,"code":"var _jsxFileName = \"/Users/omaga/Desktop/Current/SqlNodeReactJson 2/frontend/src/pages/Users.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const [tableName, setTableName] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [modifiedTableData, setModifiedTableData] = useState([]);\n  const [column_name_input, setColumn_name_input] = useState(\"\");\n  const [data_type_input, setData_type_input] = useState(\"\");\n  const fetchTableData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8800/`);\n      console.log(response.data); // log response to console\n      setTableData(response.data);\n      setModifiedTableData(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleDownload = () => {\n    try {\n      // Create a new object with the modified table data\n      const modifiedData = modifiedTableData.map(row => {\n        const newRow = {};\n        Object.keys(row).forEach(key => {\n          if (key === \"ID\") {\n            newRow[column_name_input] = row[key];\n          } else {\n            newRow[key] = row[key];\n          }\n        });\n        return newRow;\n      });\n\n      // Download the file\n      const url = window.URL.createObjectURL(new Blob([JSON.stringify(modifiedData)]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"output.json\");\n      document.body.appendChild(link);\n      link.click();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleColumnChange = (columnName, dataType) => {\n    const updatedTableData = modifiedTableData.map(row => {\n      const newRow = {\n        ...row\n      };\n      if (columnName === \"ID\") {\n        newRow[column_name_input] = row[columnName];\n        delete newRow[columnName];\n      } else {\n        newRow[columnName] = dataType;\n      }\n      return newRow;\n    });\n    setModifiedTableData(updatedTableData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Table Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: tableName,\n      onChange: e => setTableName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTableData,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), tableData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(tableData[0]).map(columnName => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: columnName\n            }, columnName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tableData.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(row).map(columnName => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: columnName === \"ID\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Column Name\",\n                  value: column_name_input,\n                  onChange: e => setColumn_name_input(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Data Type\",\n                  value: data_type_input,\n                  onChange: e => handleColumnChange(columnName, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 25\n              }, this) : row[columnName]\n            }, columnName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this))\n          }, row.ID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Users, \"OkKkH5H4KoF3z9pMeknKIVecw5k=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","axios","Users","tableName","setTableName","tableData","setTableData","modifiedTableData","setModifiedTableData","column_name_input","setColumn_name_input","data_type_input","setData_type_input","fetchTableData","response","get","console","log","data","error","handleDownload","modifiedData","map","row","newRow","Object","keys","forEach","key","url","window","URL","createObjectURL","Blob","JSON","stringify","link","document","createElement","href","setAttribute","body","appendChild","click","handleColumnChange","columnName","dataType","updatedTableData","e","target","value","length","ID"],"sources":["/Users/omaga/Desktop/Current/SqlNodeReactJson 2/frontend/src/pages/Users.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Users = () => {\n  const [tableName, setTableName] = useState(\"\");\n  const [tableData, setTableData] = useState([]);\n  const [modifiedTableData, setModifiedTableData] = useState([]);\n  const [column_name_input, setColumn_name_input] = useState(\"\");\n  const [data_type_input, setData_type_input] = useState(\"\");\n\n  const fetchTableData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8800/`);\n      console.log(response.data); // log response to console\n      setTableData(response.data);\n      setModifiedTableData(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleDownload = () => {\n    try {\n      // Create a new object with the modified table data\n      const modifiedData = modifiedTableData.map((row) => {\n        const newRow = {};\n        Object.keys(row).forEach((key) => {\n          if (key === \"ID\") {\n            newRow[column_name_input] = row[key];\n          } else {\n            newRow[key] = row[key];\n          }\n        });\n        return newRow;\n      });\n\n      // Download the file\n      const url = window.URL.createObjectURL(\n        new Blob([JSON.stringify(modifiedData)])\n      );\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", \"output.json\");\n      document.body.appendChild(link);\n      link.click();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleColumnChange = (columnName, dataType) => {\n    const updatedTableData = modifiedTableData.map((row) => {\n      const newRow = { ...row };\n      if (columnName === \"ID\") {\n        newRow[column_name_input] = row[columnName];\n        delete newRow[columnName];\n      } else {\n        newRow[columnName] = dataType;\n      }\n      return newRow;\n    });\n    setModifiedTableData(updatedTableData);\n  };\n\n  return (\n    <div>\n      <h1>Table Name:</h1>\n      <input\n        type=\"text\"\n        value={tableName}\n        onChange={(e) => setTableName(e.target.value)}\n      />\n      <button onClick={fetchTableData}>Next</button>\n      {tableData.length > 0 && (\n        <div>\n          <table>\n            <thead>\n              <tr>\n                {Object.keys(tableData[0]).map((columnName) => (\n                  <th key={columnName}>{columnName}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {tableData.map((row) => (\n                <tr key={row.ID}>\n                  {Object.keys(row).map((columnName) => (\n                    <td key={columnName}>\n                      {columnName === \"ID\" ? (\n                        <div>\n                          <input\n                            type=\"text\"\n                            placeholder=\"Column Name\"\n                            value={column_name_input}\n                            onChange={(e) =>\n                              setColumn_name_input(e.target.value)\n                            }\n                          />\n                          <input\n                            type=\"text\"\n                            placeholder=\"Data Type\"\n                            value={data_type_input}\n                            onChange={(e) =>\n                              handleColumnChange(columnName, e.target.value)\n                            }\n                          />\n                        </div>\n                      ) : (\n                        row[columnName]\n                      )}\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <button onClick={handleDownload}>Download</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Users;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}